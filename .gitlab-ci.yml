stages:
  - build
  - deploy

build_rest-api:
  image: openjdk:8 # TODO we should use a slimmer image here, only need java and bash
  stage: build
  services:
    - postgres:9
  variables:
    DATABASE_CONNECTION_STRING: 'jdbc:postgresql://postgres:password@postgres:5432/postgres'
  script:
    - ./gradlew test -Dorg.gradle.parallel=true # unit tests are fine to be run in parallel
    - ./gradlew integrationTest -Dorg.gradle.parallel=false # MUST NOT run integration tests in parallel
    - ./gradlew :rest-api:distZip
  artifacts:
    when: always
    paths:
      - 'rest-api/build/distributions/*.zip'
      - '*/build/reports/*'

deploy_on_development:
  image: governmentpaas/cf-cli
  stage: deploy
  before_script:
    - .bin/login.sh development
    - .bin/prepareEnv.sh c86700fd-b167-46f5-bd97-f133d808b521
  script:
    - .bin/deploy.sh nobt-io-dev
  environment: development
  only:
    - master

deploy_on_beta:
  image: governmentpaas/cf-cli
  stage: deploy
  before_script:
    - .bin/login.sh beta
  script:
    - .bin/deploy.sh nobt-io-beta
  environment: beta
  when: manual

deploy_on_production:
  image: governmentpaas/cf-cli
  stage: deploy
  before_script:
    - .bin/login.sh production
  script:
    - .bin/deploy.sh nobt-io
  environment: production
  when: manual