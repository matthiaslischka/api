buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id "org.asciidoctor.convert" version "1.5.3"
}

apply plugin: 'application'
apply from: rootProject.rootDir.path + '/gradle/integrationTest.gradle'

mainClassName = 'io.nobt.rest.NobtApplication'

ext {
    snippetsDir = file('build/generated-snippets')
}

asciidoctor {
    attributes 'snippets': snippetsDir
    inputs.dir snippetsDir
    dependsOn integrationTest
}

dependencies {
    compile project(':core')
    compile project(':database-config:local')
    compile project(':database-config:cloud')
    compile project(':profiles')
    compile project(':persistence')
    compile project(':inmemory-persistence')
    compile project(':db-migrations')

    compile 'com.getsentry.raven:raven-log4j2:7.7.0'

    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.1.0.Final'

    compile group: 'javax.el', name: 'javax.el-api', version: '3.0.0'
    compile group: 'org.hibernate', name: 'hibernate-validator', version: '5.2.4.Final'

    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.5'
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.5'
    compile group: 'com.sparkjava', name: 'spark-core', version: '2.5'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.7.5'

    testCompile project(':domain-test-support')
    testCompile group: 'org.mockito', name: 'mockito-core', version: '1.10.19'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testCompile(group: 'commons-logging', name: 'commons-logging', version: '1.1.1')

    integrationTestCompile project(':database-config:test')
    integrationTestCompile project(':persistence-test-support')
    integrationTestCompile 'org.awaitility:awaitility:2.0.0'
    integrationTestCompile group: 'org.springframework.restdocs', name: 'spring-restdocs-restassured', version: '1.1.1.RELEASE'
}

distributions {
    main {
        contents {
            from("${asciidoctor.outputDir}/html5/index.html") {
                into 'docs'
            }
        }
    }
}

distTar {
    enabled = false
}

distZip {
    dependsOn asciidoctor
}

task runLocal(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = mainClassName
    systemProperties 'profile': 'LOCAL'
}